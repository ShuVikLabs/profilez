name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  changes:
    name: Detect changed projects
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - name: Checkout (full history for reliable diffs)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Optional: show context
      - run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "base_ref=${{ github.base_ref }}"
          echo "head_ref=${{ github.head_ref }}"

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          # When it's a PR, paths-filter auto-detects base/head; for pushes it compares last commit.
          # Adjust folders if your structure differs.
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'
            docs:
              - 'docs/**'

      - name: Echo filter results
        run: |
          echo "frontend=${{ steps.filter.outputs.frontend }}"
          echo "backend=${{ steps.filter.outputs.backend }}"
          echo "docs=${{ steps.filter.outputs.docs }}"

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: changes
    # On push to main -> always run
    # On PR -> run only if the filter said "true"
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci --no-cache
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: frontend-build
          path: frontend/build

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: changes
    # On push to main -> always run
    # On PR -> run only if the filter said "true"
    if: ${{ needs.changes.outputs.backend == 'true' }}
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - uses: gradle/actions/setup-gradle@v3
      - run: chmod +x gradlew
      - run: ./gradlew clean build --no-daemon
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: backend-build
          path: |
            backend/build/libs
            backend/build/reports/tests

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: changes
    # On push to main -> always run
    # On PR -> run only if the filter said "true"
    if: ${{ needs.changes.outputs.docs == 'true' }}
    defaults:
      run:
        working-directory: docs
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true
      - name: Build documentation
        run: hugo --minify
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: docs-build
          path: docs/public
